*,::after,::before{
    box-sizing: border-box;
}
/* css variables-to easily modify the width and height and make it automatic */
/* css variables are actually the custom properties which is defined by the developer6 */
/* we can also use css variables in the JS by setProperty*/
:root{
    --cell-size:100px;
    --mark-size: calc(var(--cell-size)*.9);
    /* *.9=*90% */

}
body{
    margin: 0;
    padding: 0;
}
.board{
    display: grid;
    justify-content: center;
    align-content: center;
    justify-items: center;
    align-items: center;
    width: 100vw;
    height: 100vh;
    grid-template-columns: repeat(3,auto);
}
.cell{
    display: flex;
    justify-content: center;
    align-items: center;
    width: var(--cell-size);
    height: var(--cell-size);
    border: 1px solid black;
    position: relative;
    cursor: pointer;
}


.cell:first-child,
.cell:nth-child(2),
.cell:nth-child(3){
    border-top: none;
}
.cell:nth-child(3n+1){
    border-left: none;
}
.cell:nth-child(3n+3){
    border-right: none;
}

.cell:last-child,
.cell:nth-child(8),
.cell:nth-child(7){
    border-bottom: none;
}
.cell.x,
.cell.circle{
    cursor: not-allowed;
}
.cell.x::before,
.cell.x::after,
.cell.circle::before{
    background-color: black;
}
.board.x .cell:not(.x):not(.circle):hover::before,
.board.x .cell:not(.x):not(.circle):hover::after,
.board.circle .cell:not(.x):not(.circle):hover::before{
    background-color: lightgrey;

}

.cell.x::before,
.cell.x::after,
.board.x .cell:not(.x):not(.circle):hover::before,
.board.x .cell:not(.x):not(.circle):hover::after{
    content: '';
    position: absolute;
    width: calc(var(--mark-size)*.15);
    height: var(--mark-size);
}
.cell.x::before,
.board.x .cell:not(.x):not(.circle):hover::before{
    transform: rotate(45deg);
}
.cell.x::after,
.board.x .cell:not(.x):not(.circle):hover::after{
    transform: rotate(-45deg);
}

.cell.circle::before,
.cell.circle::after,
.board.circle .cell:not(.x):not(.circle):hover::before,
.board.circle .cell:not(.x):not(.circle):hover::after{
    content: '';
    position: absolute;
    width: var(--mark-size);
    height: var(--mark-size);
    border-radius: 50%;


}
.cell.circle::before,
.board.circle .cell:not(.x):not(.circle):hover::before{
    width: var(--mark-size);
    height: var(--mark-size);

}
.cell.circle::after,
.board.circle .cell:not(.x):not(.circle):hover::after{
    width: calc(var(--mark-size)*.7);
    height: calc(var(--mark-size)*.7);
    background-color: white;
}

.winning-message{
    display: none;
    position:fixed;
    top:0;
    bottom:0;
    left: 0;
    right: 0;
    flex-flow: column wrap;
    justify-content: center;
    align-items: center;
    background-color: rgb(0,0,0,.9);
    font-size: 5rem;
    color: white;

}
.winning-message button{
    font-size: 3rem;
    padding: 10px;
    border-radius: 10px;
    border: 1px solid rgb(197, 188, 188);
    outline: none;
    cursor: pointer;
}
.winning-message button:hover{
    background-color: black;
    color: white;
    
}
.winning-message.show{
    display: flex;
}


